{"version":3,"sources":["webpack://potree/webpack/bootstrap","webpack://potree/./src/workers/binary-decoder-worker.js","webpack://potree/./src/point-attributes.ts","webpack://potree/./src/version.ts","webpack://potree/./src/workers/custom-array-view.ts","webpack://potree/./src/workers/binary-decoder-worker-internal.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_binaryDecoderWorkerInternal","onmessage","handleMessage","PointAttributeName","POINT_ATTRIBUTE_TYPES","ordinal","size","makePointAttribute","type","numElements","byteSize","RGBA_PACKED","COLOR_PACKED","POINT_ATTRIBUTES","POSITION_CARTESIAN","RGB_PACKED","NORMAL_FLOATS","FILLER_1B","FILLER","INTENSITY","CLASSIFICATION","NORMAL_SPHEREMAPPED","NORMAL_OCT16","NORMAL","PointAttributes","pointAttributeNames","this","attributes","length","pointAttributeName","pointAttribute","push","add","hasColors","undefined","find","isColorAttribute","hasNormals","isNormalAttribute","_a","Version","version","versionMinor","vmLength","indexOf","versionMajor","parseInt","substr","isNaN","newerThan","v","equalOrHigher","upTo","CustomArrayView","buffer","tmp","ArrayBuffer","tmpf","Float32Array","tmpu8","Uint8Array","u8","getUint32","getUint16","getFloat32","getUint8","__webpack_exports__","mathSign","Math","sign","x","event","data","pointAttributes","ctx","attributeBuffers","currentOffset","mean","nodeOffset","offset","numPoints","byteLength","scale","tightBoxMax","Number","NEGATIVE_INFINITY","tightBoxMin","POSITIVE_INFINITY","transferables","_i","decodeAndAddAttribute","indices","iIndices","Uint32Array","classifications","attribute","addEmptyClassificationBuffer","message","tightBoundingBox","min","max","postMessage","decodedAttribute","positions","y","z","decodePositionCartesian","colors","decodeColor","intensities","decodeIntensity","j","decodeClassification","normals","bx","by","ex","ey","nx","ny","nz","sqrt","decodeNormalSphereMapped","buff","u","abs","length_1","decodeNormalOct16","decodeNormal","decodePointAttribute"],"mappings":"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","file":"5be7a8df577399ceb581.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { handleMessage } from './binary-decoder-worker-internal';\n\n/*eslint-disable */\nonmessage = handleMessage;\n","// -------------------------------------------------------------------------------------------------\n// Converted to Typescript and adapted from https://github.com/potree/potree\n// -------------------------------------------------------------------------------------------------\n\nexport enum PointAttributeName {\n  POSITION_CARTESIAN = 0, // float x, y, z;\n  COLOR_PACKED = 1, // byte r, g, b, a; \tI = [0,1]\n  COLOR_FLOATS_1 = 2, // float r, g, b; \t\tI = [0,1]\n  COLOR_FLOATS_255 = 3, // float r, g, b; \t\tI = [0,255]\n  NORMAL_FLOATS = 4, // float x, y, z;\n  FILLER = 5,\n  INTENSITY = 6,\n  CLASSIFICATION = 7,\n  NORMAL_SPHEREMAPPED = 8,\n  NORMAL_OCT16 = 9,\n  NORMAL = 10,\n}\n\nexport interface PointAttributeType {\n  ordinal: number;\n  size: number;\n}\n\nexport const POINT_ATTRIBUTE_TYPES: Record<string, PointAttributeType> = {\n  DATA_TYPE_DOUBLE: { ordinal: 0, size: 8 },\n  DATA_TYPE_FLOAT: { ordinal: 1, size: 4 },\n  DATA_TYPE_INT8: { ordinal: 2, size: 1 },\n  DATA_TYPE_UINT8: { ordinal: 3, size: 1 },\n  DATA_TYPE_INT16: { ordinal: 4, size: 2 },\n  DATA_TYPE_UINT16: { ordinal: 5, size: 2 },\n  DATA_TYPE_INT32: { ordinal: 6, size: 4 },\n  DATA_TYPE_UINT32: { ordinal: 7, size: 4 },\n  DATA_TYPE_INT64: { ordinal: 8, size: 8 },\n  DATA_TYPE_UINT64: { ordinal: 9, size: 8 },\n};\n\nexport interface IPointAttribute {\n  name: PointAttributeName;\n  type: PointAttributeType;\n  numElements: number;\n  byteSize: number;\n}\n\nexport interface IPointAttributes {\n  attributes: IPointAttribute[];\n  byteSize: number;\n  size: number;\n}\n\nfunction makePointAttribute(\n  name: PointAttributeName,\n  type: PointAttributeType,\n  numElements: number,\n): IPointAttribute {\n  return {\n    name,\n    type,\n    numElements,\n    byteSize: numElements * type.size,\n  };\n}\n\nconst RGBA_PACKED = makePointAttribute(\n  PointAttributeName.COLOR_PACKED,\n  POINT_ATTRIBUTE_TYPES.DATA_TYPE_INT8,\n  4,\n);\n\nexport const POINT_ATTRIBUTES = {\n  POSITION_CARTESIAN: makePointAttribute(\n    PointAttributeName.POSITION_CARTESIAN,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT,\n    3,\n  ),\n  RGBA_PACKED,\n  COLOR_PACKED: RGBA_PACKED,\n  RGB_PACKED: makePointAttribute(\n    PointAttributeName.COLOR_PACKED,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_INT8,\n    3,\n  ),\n  NORMAL_FLOATS: makePointAttribute(\n    PointAttributeName.NORMAL_FLOATS,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT,\n    3,\n  ),\n  FILLER_1B: makePointAttribute(\n    PointAttributeName.FILLER,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8,\n    1,\n  ),\n  INTENSITY: makePointAttribute(\n    PointAttributeName.INTENSITY,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT16,\n    1,\n  ),\n  CLASSIFICATION: makePointAttribute(\n    PointAttributeName.CLASSIFICATION,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8,\n    1,\n  ),\n  NORMAL_SPHEREMAPPED: makePointAttribute(\n    PointAttributeName.NORMAL_SPHEREMAPPED,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8,\n    2,\n  ),\n  NORMAL_OCT16: makePointAttribute(\n    PointAttributeName.NORMAL_OCT16,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8,\n    2,\n  ),\n  NORMAL: makePointAttribute(PointAttributeName.NORMAL, POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT, 3),\n};\n\nexport type PointAttributeStringName = keyof typeof POINT_ATTRIBUTES;\n\nexport class PointAttributes implements IPointAttributes {\n  attributes: IPointAttribute[] = [];\n  byteSize: number = 0;\n  size: number = 0;\n\n  constructor(pointAttributeNames: PointAttributeStringName[] = []) {\n    for (let i = 0; i < pointAttributeNames.length; i++) {\n      const pointAttributeName = pointAttributeNames[i];\n      const pointAttribute = POINT_ATTRIBUTES[pointAttributeName];\n      this.attributes.push(pointAttribute);\n      this.byteSize += pointAttribute.byteSize;\n      this.size++;\n    }\n  }\n\n  add(pointAttribute: IPointAttribute): void {\n    this.attributes.push(pointAttribute);\n    this.byteSize += pointAttribute.byteSize;\n    this.size++;\n  }\n\n  hasColors(): boolean {\n    return this.attributes.find(isColorAttribute) !== undefined;\n  }\n\n  hasNormals(): boolean {\n    return this.attributes.find(isNormalAttribute) !== undefined;\n  }\n}\n\nfunction isColorAttribute({ name }: IPointAttribute): boolean {\n  return name === PointAttributeName.COLOR_PACKED;\n}\n\nfunction isNormalAttribute({ name }: IPointAttribute): boolean {\n  return (\n    name === PointAttributeName.NORMAL_SPHEREMAPPED ||\n    name === PointAttributeName.NORMAL_FLOATS ||\n    name === PointAttributeName.NORMAL ||\n    name === PointAttributeName.NORMAL_OCT16\n  );\n}\n","export class Version {\n  version: string;\n  versionMajor: number;\n  versionMinor: number = 0;\n\n  constructor(version: string) {\n    this.version = version;\n\n    const vmLength = version.indexOf('.') === -1 ? version.length : version.indexOf('.');\n    this.versionMajor = parseInt(version.substr(0, vmLength), 10);\n    this.versionMinor = parseInt(version.substr(vmLength + 1), 10);\n    if (isNaN(this.versionMinor)) {\n      this.versionMinor = 0;\n    }\n  }\n\n  newerThan(version: string): boolean {\n    const v = new Version(version);\n\n    if (this.versionMajor > v.versionMajor) {\n      return true;\n    } else if (this.versionMajor === v.versionMajor && this.versionMinor > v.versionMinor) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  equalOrHigher(version: string): boolean {\n    const v = new Version(version);\n\n    if (this.versionMajor > v.versionMajor) {\n      return true;\n    } else if (this.versionMajor === v.versionMajor && this.versionMinor >= v.versionMinor) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  upTo(version: string): boolean {\n    return !this.newerThan(version);\n  }\n}\n","/**\n * Adapted from Potree.js http://potree.org\n * Potree License: https://github.com/potree/potree/blob/1.5/LICENSE\n */\n\n// http://jsperf.com/uint8array-vs-dataview3/3\n// tslint:disable:no-bitwise\nexport class CustomArrayView {\n  private u8: Uint8Array;\n  private tmp = new ArrayBuffer(4);\n  private tmpf = new Float32Array(this.tmp);\n  private tmpu8 = new Uint8Array(this.tmp);\n\n  constructor(buffer: ArrayBuffer) {\n    this.u8 = new Uint8Array(buffer);\n  }\n\n  getUint32(i: number) {\n    return (this.u8[i + 3] << 24) | (this.u8[i + 2] << 16) | (this.u8[i + 1] << 8) | this.u8[i];\n  }\n\n  getUint16(i: number): number {\n    return (this.u8[i + 1] << 8) | this.u8[i];\n  }\n\n  getFloat32(i: number): number {\n    const tmpu8 = this.tmpu8;\n    const u8 = this.u8;\n    const tmpf = this.tmpf;\n\n    tmpu8[0] = u8[i + 0];\n    tmpu8[1] = u8[i + 1];\n    tmpu8[2] = u8[i + 2];\n    tmpu8[3] = u8[i + 3];\n\n    return tmpf[0];\n  }\n\n  getUint8(i: number): number {\n    return this.u8[i];\n  }\n}\n// tslint:enable:no-bitwise\n","/**\n * Adapted from Potree.js http://potree.org\n * Potree License: https://github.com/potree/potree/blob/1.5/LICENSE\n */\n\nimport {\n  IPointAttribute,\n  IPointAttributes,\n  POINT_ATTRIBUTES,\n  PointAttributeName,\n} from '../point-attributes';\nimport { Version } from '../version';\nimport { CustomArrayView } from './custom-array-view';\n\n// IE11 does not have Math.sign(), this has been adapted from CoreJS es6.math.sign.js for TypeScript\nconst mathSign =\n  Math.sign ||\n  function(x: number): number {\n    // tslint:disable-next-line:triple-equals\n    return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n  };\n\ninterface DecodedAttribute {\n  buffer: ArrayBuffer;\n  attribute: IPointAttribute;\n}\n\ninterface Ctx {\n  attributeBuffers: Record<string, DecodedAttribute>;\n  currentOffset: number;\n  data: CustomArrayView;\n  mean: [number, number, number];\n  nodeOffset: [number, number, number];\n  numPoints: number;\n  pointAttributes: IPointAttributes;\n  scale: number;\n  tightBoxMax: [number, number, number];\n  tightBoxMin: [number, number, number];\n  transferables: ArrayBuffer[];\n  version: Version;\n}\n\nexport function handleMessage(event: MessageEvent) {\n  const buffer = event.data.buffer;\n  const pointAttributes: IPointAttributes = event.data.pointAttributes;\n\n  const ctx: Ctx = {\n    attributeBuffers: {},\n    currentOffset: 0,\n    data: new CustomArrayView(buffer),\n    mean: [0, 0, 0],\n    nodeOffset: event.data.offset,\n    numPoints: event.data.buffer.byteLength / pointAttributes.byteSize,\n    pointAttributes,\n    scale: event.data.scale,\n    tightBoxMax: [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    tightBoxMin: [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n    transferables: [],\n    version: new Version(event.data.version),\n  };\n\n  for (const pointAttribute of ctx.pointAttributes.attributes) {\n    decodeAndAddAttribute(pointAttribute, ctx);\n    ctx.currentOffset += pointAttribute.byteSize;\n  }\n\n  const indices = new ArrayBuffer(ctx.numPoints * 4);\n  const iIndices = new Uint32Array(indices);\n  for (let i = 0; i < ctx.numPoints; i++) {\n    iIndices[i] = i;\n  }\n\n  if (!ctx.attributeBuffers[PointAttributeName.CLASSIFICATION]) {\n    addEmptyClassificationBuffer(ctx);\n  }\n\n  const message = {\n    buffer: buffer,\n    mean: ctx.mean,\n    attributeBuffers: ctx.attributeBuffers,\n    tightBoundingBox: { min: ctx.tightBoxMin, max: ctx.tightBoxMax },\n    indices,\n  };\n\n  postMessage(message, ctx.transferables as any);\n}\n\nfunction addEmptyClassificationBuffer(ctx: Ctx): void {\n  const buffer = new ArrayBuffer(ctx.numPoints * 4);\n  const classifications = new Float32Array(buffer);\n\n  for (let i = 0; i < ctx.numPoints; i++) {\n    classifications[i] = 0;\n  }\n\n  ctx.attributeBuffers[PointAttributeName.CLASSIFICATION] = {\n    buffer,\n    attribute: POINT_ATTRIBUTES.CLASSIFICATION,\n  };\n}\n\nfunction decodeAndAddAttribute(attribute: IPointAttribute, ctx: Ctx): void {\n  const decodedAttribute = decodePointAttribute(attribute, ctx);\n  if (decodedAttribute === undefined) {\n    return;\n  }\n\n  ctx.attributeBuffers[decodedAttribute.attribute.name] = decodedAttribute;\n  ctx.transferables.push(decodedAttribute.buffer);\n}\n\nfunction decodePointAttribute(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute | undefined {\n  switch (attribute.name) {\n    case PointAttributeName.POSITION_CARTESIAN:\n      return decodePositionCartesian(attribute, ctx);\n    case PointAttributeName.COLOR_PACKED:\n      return decodeColor(attribute, ctx);\n    case PointAttributeName.INTENSITY:\n      return decodeIntensity(attribute, ctx);\n    case PointAttributeName.CLASSIFICATION:\n      return decodeClassification(attribute, ctx);\n    case PointAttributeName.NORMAL_SPHEREMAPPED:\n      return decodeNormalSphereMapped(attribute, ctx);\n    case PointAttributeName.NORMAL_OCT16:\n      return decodeNormalOct16(attribute, ctx);\n    case PointAttributeName.NORMAL:\n      return decodeNormal(attribute, ctx);\n    default:\n      return undefined;\n  }\n}\n\nfunction decodePositionCartesian(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints * 4 * 3);\n  const positions = new Float32Array(buffer);\n\n  for (let i = 0; i < ctx.numPoints; i++) {\n    let x;\n    let y;\n    let z;\n\n    if (ctx.version.newerThan('1.3')) {\n      x = ctx.data.getUint32(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 0) * ctx.scale;\n      y = ctx.data.getUint32(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 4) * ctx.scale;\n      z = ctx.data.getUint32(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 8) * ctx.scale;\n    } else {\n      x = ctx.data.getFloat32(i * ctx.pointAttributes.byteSize + 0) + ctx.nodeOffset[0];\n      y = ctx.data.getFloat32(i * ctx.pointAttributes.byteSize + 4) + ctx.nodeOffset[1];\n      z = ctx.data.getFloat32(i * ctx.pointAttributes.byteSize + 8) + ctx.nodeOffset[2];\n    }\n\n    positions[3 * i + 0] = x;\n    positions[3 * i + 1] = y;\n    positions[3 * i + 2] = z;\n\n    ctx.mean[0] += x / ctx.numPoints;\n    ctx.mean[1] += y / ctx.numPoints;\n    ctx.mean[2] += z / ctx.numPoints;\n\n    ctx.tightBoxMin[0] = Math.min(ctx.tightBoxMin[0], x);\n    ctx.tightBoxMin[1] = Math.min(ctx.tightBoxMin[1], y);\n    ctx.tightBoxMin[2] = Math.min(ctx.tightBoxMin[2], z);\n\n    ctx.tightBoxMax[0] = Math.max(ctx.tightBoxMax[0], x);\n    ctx.tightBoxMax[1] = Math.max(ctx.tightBoxMax[1], y);\n    ctx.tightBoxMax[2] = Math.max(ctx.tightBoxMax[2], z);\n  }\n\n  return { buffer, attribute };\n}\n\nfunction decodeColor(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints * 3);\n  const colors = new Uint8Array(buffer);\n\n  for (let i = 0; i < ctx.numPoints; i++) {\n    colors[3 * i + 0] = ctx.data.getUint8(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 0);\n    colors[3 * i + 1] = ctx.data.getUint8(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 1);\n    colors[3 * i + 2] = ctx.data.getUint8(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 2);\n  }\n\n  return { buffer, attribute };\n}\n\nfunction decodeIntensity(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints * 4);\n  const intensities = new Float32Array(buffer);\n\n  for (let i = 0; i < ctx.numPoints; i++) {\n    intensities[i] = ctx.data.getUint16(ctx.currentOffset + i * ctx.pointAttributes.byteSize);\n  }\n\n  return { buffer, attribute };\n}\n\nfunction decodeClassification(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints);\n  const classifications = new Uint8Array(buffer);\n\n  for (let j = 0; j < ctx.numPoints; j++) {\n    classifications[j] = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize);\n  }\n\n  return { buffer, attribute };\n}\n\nfunction decodeNormalSphereMapped(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints * 4 * 3);\n  const normals = new Float32Array(buffer);\n\n  for (let j = 0; j < ctx.numPoints; j++) {\n    const bx = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 0);\n    const by = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 1);\n\n    const ex = bx / 255;\n    const ey = by / 255;\n\n    let nx = ex * 2 - 1;\n    let ny = ey * 2 - 1;\n    let nz = 1;\n    const nw = -1;\n\n    const l = nx * -nx + ny * -ny + nz * -nw;\n    nz = l;\n    nx = nx * Math.sqrt(l);\n    ny = ny * Math.sqrt(l);\n\n    nx = nx * 2;\n    ny = ny * 2;\n    nz = nz * 2 - 1;\n\n    normals[3 * j + 0] = nx;\n    normals[3 * j + 1] = ny;\n    normals[3 * j + 2] = nz;\n  }\n\n  return { buffer, attribute };\n}\n\nfunction decodeNormalOct16(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buff = new ArrayBuffer(ctx.numPoints * 4 * 3);\n  const normals = new Float32Array(buff);\n\n  for (let j = 0; j < ctx.numPoints; j++) {\n    const bx = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 0);\n    const by = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 1);\n\n    const u = (bx / 255) * 2 - 1;\n    const v = (by / 255) * 2 - 1;\n\n    let z = 1 - Math.abs(u) - Math.abs(v);\n\n    let x = 0;\n    let y = 0;\n    if (z >= 0) {\n      x = u;\n      y = v;\n    } else {\n      x = -(v / mathSign(v) - 1) / mathSign(u);\n      y = -(u / mathSign(u) - 1) / mathSign(v);\n    }\n\n    const length = Math.sqrt(x * x + y * y + z * z);\n    x = x / length;\n    y = y / length;\n    z = z / length;\n\n    normals[3 * j + 0] = x;\n    normals[3 * j + 1] = y;\n    normals[3 * j + 2] = z;\n  }\n\n  return { buffer: buff, attribute };\n}\n\nfunction decodeNormal(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints * 4 * 3);\n  const normals = new Float32Array(buffer);\n\n  for (let j = 0; j < ctx.numPoints; j++) {\n    const x = ctx.data.getFloat32(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 0);\n    const y = ctx.data.getFloat32(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 4);\n    const z = ctx.data.getFloat32(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 8);\n\n    normals[3 * j + 0] = x;\n    normals[3 * j + 1] = y;\n    normals[3 * j + 2] = z;\n  }\n\n  return { buffer, attribute };\n}\n"],"sourceRoot":""}